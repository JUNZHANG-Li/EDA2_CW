- name: Prepare UniRef50 Subset on Designated Worker
  hosts: "{{ groups['workers'][0] }}"
  become: true
  gather_facts: yes
  vars:
    uniref50_url: "https://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref50/uniref50.fasta.gz"
    worker_temp_subset_path: "/tmp/uniref50_subset.fasta"
    subset_line_count: 300000
    run_user: "{{ ansible_user }}"

  tasks:
    - name: Ensure necessary tools (curl, gunzip, head) are installed on designated worker
      ansible.builtin.dnf:
        name:
          - curl
          - gzip
          - coreutils
        state: present
      become: true

    - name: Start streaming download and subset creation (async)
      ansible.builtin.shell:
        cmd: "curl -L --fail --silent --show-error {{ uniref50_url }} | gunzip -c | head -n {{ subset_line_count }} > {{ worker_temp_subset_path }}"
        creates: "{{ worker_temp_subset_path }}"
      args:
         executable: /bin/bash
      async: 9000 # Keep async duration
      poll: 0 # Set poll to 0 to run truly async and check status later
      register: async_task_kickoff # Register the async job ID

    - name: Wait for subset creation task to complete and get results
      ansible.builtin.async_status:
        jid: "{{ async_task_kickoff.ansible_job_id }}"
      register: subset_creation_results # Register the ACTUAL results
      until: subset_creation_results.finished # Wait until finished
      retries: 180 # How many times to check (e.g., 90 mins if delay is 30s)
      delay: 30 # Check every 30 seconds (adjust as needed)
      # Optional: Add become if the status check needs elevated privileges (usually not)
      # become: true

    - name: Check if async task failed based on return code
      ansible.builtin.fail:
        msg: "Streaming subset creation failed. RC: {{ subset_creation_results.rc }}. Stdout: {{ subset_creation_results.stdout | default('') }}. Stderr: {{ subset_creation_results.stderr | default('') }}"
      when: subset_creation_results.rc is defined and subset_creation_results.rc != 0

    - name: Verify subset file exists after async task completion
      ansible.builtin.stat:
        path: "{{ worker_temp_subset_path }}"
      register: subset_file_stat
      failed_when: not subset_file_stat.stat.exists or subset_file_stat.stat.size == 0

    - name: Report subset file location on worker
      ansible.builtin.debug:
        msg: "Dataset subset created successfully on {{ inventory_hostname }} at {{ worker_temp_subset_path }}"
      when: subset_file_stat.stat.exists | default(false)