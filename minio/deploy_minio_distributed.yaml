# filename: deploy_minio_distributed.yaml (RPM Version)
---
- name: Deploy MinIO Server in Distributed Mode on Workers using RPM
  hosts: workers
  become: true

  vars:
    # MinIO Configuration
    minio_rpm_url: "https://dl.min.io/server/minio/release/linux-amd64/minio.rpm"
    # Default service name often used by RPMs, verify this
    minio_service_name: "minio"
    minio_data_dir: "/data/minio-data"

    # --- SECURITY WARNING ---
    minio_root_user: "minioadmin" # CHANGE THIS
    minio_root_password: "minioadmin"

    minio_env_file: "/etc/default/minio"

  tasks:
    # --- Install MinIO via RPM ---
    - name: Install MinIO from RPM URL using DNF
      ansible.builtin.dnf:
        name: "{{ minio_rpm_url }}"
        state: present
        disable_gpg_check: yes

    # --- Configure Environment Variables ---
    - name: Ensure MinIO environment directory exists (e.g., /etc/default)
      ansible.builtin.file:
        path: "{{ minio_env_file | dirname }}"
        state: directory
        mode: '0755'

    - name: Configure MinIO environment variables
      ansible.builtin.template:
        src: files/minio_env.j2
        dest: "{{ minio_env_file }}"
        owner: root
        group: root
        mode: '0640' # Restrict read access
      # Notify service restart if this file changes (if using handlers)
      register: minio_env_config

    # --- Prepare Storage Directory ---
    - name: Ensure MinIO data directory exists on /data mount
      ansible.builtin.file:
        path: "{{ minio_data_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0700'

    # --- Start and Enable Service (using RPM's service file) ---
    - name: Reload systemd daemon to recognize potentially new service file from RPM
      ansible.builtin.systemd:
        daemon_reload: yes
      # Only reload if the env file changed (service might need restart to read it)
      # when: minio_env_config.changed

    - name: Enable and start the MinIO service
      ansible.builtin.systemd:
        name: "{{ minio_service_name }}" # Use service name from RPM
        state: started
        enabled: yes

    # Add explicit restart if env vars changed (if not using handlers)
    - name: Restart MinIO service if environment variables changed
      ansible.builtin.systemd:
        name: "{{ minio_service_name }}"
        state: restarted
      when: minio_env_config.changed

    - name: Wait briefly for service to initialize
      ansible.builtin.pause:
        seconds: 10

    # --- Verification ---
    - name: Check MinIO service status
      ansible.builtin.command: "systemctl is-active {{ minio_service_name }}"
      register: minio_status
      changed_when: false
      failed_when: minio_status.rc != 0

    - name: Display MinIO status and access info
      ansible.builtin.debug:
        msg:
          - "{{ minio_service_name }} service is active on {{ inventory_hostname }}."
          - "Access API/Client via: http://{{ ansible_default_ipv4.address }}:9000"
          - "Access Console via: http://{{ ansible_default_ipv4.address }}:9001"
          - "Use User: {{ minio_root_user }} / Pass: [REDACTED]"
      when: minio_status.rc == 0