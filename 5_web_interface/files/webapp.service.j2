[Unit]
Description=COMP0239 Flask Webapp (Image Captioning)
# Ensure network target and Dask scheduler service are up before starting this service
After=network.target dask-scheduler.service

[Service]
# Run as the user who owns the files and can write to uploads
User={{ target_user }}
Group={{ target_user }}

# Set the working directory to where app.py is located
WorkingDirectory={{ webapp_base_dir }}

# Command to execute the Flask app using Gunicorn
# Point ExecStart to the gunicorn executable in the user's local bin directory
# Use the full path to the gunicorn executable: /home/{{ target_user }}/.local/bin/gunicorn
# Options:
# --workers: number of worker processes (start with 1 or 2, adjust based on load)
# --bind: the host and port Gunicorn should listen on
# --timeout: worker timeout (increase if tasks take long, BLIP can be slow)
# --limit-request-body: max size of request body in bytes. Set this > 12MB (e.g., 100MB = 104857600).
#                       0 means no limit, but a reasonable limit is recommended.
# app:app: Tells Gunicorn to find the Flask application instance 'app' in 'app.py'
ExecStart=/home/{{ target_user }}/.local/bin/gunicorn --workers 2 --bind 0.0.0.0:5000 --timeout 120 --limit-request-body 104857600 app:app

# Restart the service if it fails
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target